name: CI

on:
  push:
    branches: [main, develop]
    tags:
      - "*"
  pull_request:
    branches: [main, develop]

env:
  CI: true

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: false

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Cache git LFS
        uses: actions/cache@v4
        with:
          path: .git/lfs
          key: git-lfs-v1-${{ matrix.python-version }}-${{ hashFiles('.lfs-assets-id') }}
          restore-keys: |
            git-lfs-v1-${{ matrix.python-version }}
            git-lfs-v1
            git-lfs

      - name: Git LFS
        run: |
          git lfs checkout
          git lfs pull
          git lfs prune --verify-remote

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - name: Install dependencies
        run: |
          poetry env use "${{ matrix.python-version }}"
          poetry install --without dev

      - name: Test with pytest
        run: |
          poetry run pytest -vv -n=auto --durations=25 --cov-report html \
          --cov-config pyproject.toml roseau
        env:
          ROSEAU_LOAD_FLOW_LICENSE_KEY: ${{ secrets.ROSEAU_LOAD_FLOW_LICENSE_KEY }}

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: code-coverage-report-${{ runner.os }}-python-${{ matrix.python-version }}
          path: htmlcov/
