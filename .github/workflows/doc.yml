name: Documentation

on:
  push:
    branches: [ "main", "develop" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install debian dependencies
        run: |
          sudo apt update
          sudo apt -yq --no-install-suggests --no-install-recommends install pandoc make

      - uses: actions/checkout@v3
        with:
          lfs: false

      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id

      - name: Cache git LFS
        uses: actions/cache@v3
        with:
          path: .git/lfs
          key: git-lfs-v1-${{ matrix.python-version }}-${{ hashFiles('.lfs-assets-id') }}
          restore-keys: |
            git-lfs-v1-${{ matrix.python-version }}
            git-lfs-v1
            git-lfs

      - name: Git LFS
        run: |
          git lfs checkout
          git lfs pull
          git lfs prune --verify-remote

      - name: Setup Pages
        uses: actions/configure-pages@v2

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "poetry"

      - name: Install dependencies
        run: |
          poetry env use "3.10"
          poetry install --only doc

      - name: Build with Sphinx
        run: |
          poetry env use "3.10"
          cd doc && make html
        env:
          SPHINXBUILD: poetry run sphinx-build

      - name: Upload pages artifact
        if: ${{ github.event_name == "pull_request" && github.base_ref == "main" && github.event.action == "closed" && github.event.pull_request.merged == true }}
        uses: actions/upload-pages-artifact@v1
        with:
          path: "build/html/"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        if: ${{ github.event_name != "pull_request" || github.base_ref != "main" }}
        with:
          path: "build/html/"

  # Deployment job
  deploy:
    if: ${{ github.event_name == "pull_request" && github.base_ref == "main" && github.event.action == "closed" && github.event.pull_request.merged == true }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
