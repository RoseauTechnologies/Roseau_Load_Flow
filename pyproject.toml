[tool.poetry]
name = "roseau_load_flow"
version = "0.4.0"
description = "Highly capable three-phase load flow solver"
authors = [
    "Ali Hamdan <ali.hamdan@roseautechnologies.com>",
    "Sébastien Vallet <sebastien.vallet@roseautechnologies.com>",
    "Benoît Vinot <benoit.vinot@roseautechnologies.com>",
    "Victor Gouin <victor.gouin@roseautechnologies.com>",
]
maintainers = ["Ali Hamdan <ali.hamdan@roseautechnologies.com>"]
license = "Proprietary"
repository = "https://github.com/RoseauTechnologies/Roseau_Load_Flow/"
readme = "README.md"
include = []
exclude = [
    "**/tests/**",
    "**/conftest.py",
]
packages = [
    { include = "roseau/load_flow" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Physics",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.9"
numpy = ">=1.21.5"
pandas = ">=1.4.0"
geopandas = ">=0.10.2"
shapely = ">=2.0.0"
regex = ">=2022.1.18"
requests = ">=2.28.1"
pint = ">=0.19.2"
typing-extensions = ">=4.6.2"

[tool.poetry.group.test.dependencies]
pytest = "^7.1.2"
pytest-cov = "^4.0.0"
pytest-xdist = "^3.1.0"
requests-mock = "^1.9.3"
coverage = { version = "^7.0.5", extras = ["toml"] }

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.0.0"
black = { version = "^23.1.0", extras = ["jupyter"] }

[tool.poetry.group.doc.dependencies]
Sphinx = "^6.2.0"
myst-parser = ">=0.16.1"
sphinx-math-dollar = "^1.2.1"
sphinx-autoapi = "^2.0.0"
sphinx-copybutton = ">=0.5.1"
sphinx-inline-tabs = ">=2022.1.2b11"
jupyter = "^1.0.0"
nbsphinx = ">=0.8.9"
furo = ">=2022.9.29"

[tool.poetry.group.docker]
optional = true
[tool.poetry.group.docker.dependencies]
jupyterlab = "^3.4.8"
jupyterlab-language-pack-fr-FR = "^3.4"

[tool.black]
line-length = 120
target-version = ["py39", "py310", "py311"]

[tool.ruff]
line-length = 120
target-version = "py39"
show-fixes = true
select = ["E", "F", "C90", "W", "B", "UP", "I", "RUF100"]
unfixable = ["B"]
extend-ignore = ["E501", "B024"]

[tool.ruff.mccabe]
max-complexity = 15

[tool.coverage.run]
branch = true
omit = ["roseau/load_flow/__about__.py"]

[tool.coverage.paths]
source = ["roseau/load_flow/"]

[tool.coverage.report]
# Skip files with 100% coverage
skip_covered = true
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",
    # Don't complain about missing debug-only code:
    "def __repr__",
    "if self.debug",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run:
    "if 0:",
    "if __name__ == .__main__.:",
    # Type checking
    "if TYPE_CHECKING:",
]
ignore_errors = true

[tool.coverage.html]
directory = "htmlcov"

# Pytest
[tool.pytest.ini_options]
addopts = "--color=yes -vv -n=0"
testpaths = ["roseau/load_flow/"]
